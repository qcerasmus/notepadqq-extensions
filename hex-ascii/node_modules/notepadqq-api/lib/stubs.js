var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var Stubs;
(function (Stubs) {
    var Stub = (function () {
        function Stub(messageInterpreter, objectId) {
            this._objectId = objectId;
            this._messageInterpreter = messageInterpreter;
            return Stub._proxify(this, this._methodMissing);
        }
        Stub.prototype.on = function (event, callback) {
            this._messageInterpreter.registerEventHandler(this._objectId, event, callback);
        };
        Stub.prototype.equals = function (other) {
            return other instanceof Stub &&
                this._objectId == other._objectId &&
                this._messageInterpreter == other._messageInterpreter;
        };
        Stub.prototype._methodMissing = function (name, args) {
            //console.log("Calling remote " + name)
            return this._messageInterpreter.invokeApi(this._objectId, name, args);
        };
        Stub._proxify = function (object, getHandler) {
            return Proxy.create({
                get: function (receiver, name) {
                    if (object[name] != null) {
                        return object[name];
                    }
                    else if (name === "inspect") {
                        // Avoid calling remote method "inspect" when
                        // user does console.log(stub)
                        return function () { return ("[Stub " + object._objectId + "]"); };
                    }
                    else {
                        return function () {
                            var args = [];
                            for (var i = 0; i < arguments.length; i++) {
                                args.push(arguments[i]);
                            }
                            return getHandler.bind(object)(name, args);
                        };
                    }
                },
                getOwnPropertyNames: function () {
                    return [];
                }
            }, Object.getPrototypeOf(object));
        };
        return Stub;
    })();
    Stubs.Stub = Stub;
    var Notepadqq = (function (_super) {
        __extends(Notepadqq, _super);
        function Notepadqq(messageInterpreter, objectId) {
            _super.call(this, messageInterpreter, objectId);
            return Stub._proxify(this, this._methodMissing);
        }
        return Notepadqq;
    })(Stub);
    Stubs.Notepadqq = Notepadqq;
    var Editor = (function (_super) {
        __extends(Editor, _super);
        function Editor(messageInterpreter, objectId) {
            _super.call(this, messageInterpreter, objectId);
            return Stub._proxify(this, this._methodMissing);
        }
        return Editor;
    })(Stub);
    Stubs.Editor = Editor;
    var Window = (function (_super) {
        __extends(Window, _super);
        function Window(messageInterpreter, objectId) {
            _super.call(this, messageInterpreter, objectId);
            return Stub._proxify(this, this._methodMissing);
        }
        return Window;
    })(Stub);
    Stubs.Window = Window;
    var MenuItem = (function (_super) {
        __extends(MenuItem, _super);
        function MenuItem(messageInterpreter, objectId) {
            _super.call(this, messageInterpreter, objectId);
            return Stub._proxify(this, this._methodMissing);
        }
        return MenuItem;
    })(Stub);
    Stubs.MenuItem = MenuItem;
})(Stubs || (Stubs = {}));
module.exports = Stubs;
//# sourceMappingURL=stubs.js.map