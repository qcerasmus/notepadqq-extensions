(function (ErrorCode) {
    ErrorCode[ErrorCode["NONE"] = 0] = "NONE";
    ErrorCode[ErrorCode["INVALID_REQUEST"] = 1] = "INVALID_REQUEST";
    ErrorCode[ErrorCode["INVALID_ARGUMENT_NUMBER"] = 2] = "INVALID_ARGUMENT_NUMBER";
    ErrorCode[ErrorCode["INVALID_ARGUMENT_TYPE"] = 3] = "INVALID_ARGUMENT_TYPE";
    ErrorCode[ErrorCode["OBJECT_DEALLOCATED"] = 4] = "OBJECT_DEALLOCATED";
    ErrorCode[ErrorCode["OBJECT_NOT_FOUND"] = 5] = "OBJECT_NOT_FOUND";
    ErrorCode[ErrorCode["METHOD_NOT_FOUND"] = 6] = "METHOD_NOT_FOUND";
})(exports.ErrorCode || (exports.ErrorCode = {}));
var ErrorCode = exports.ErrorCode;
var MessageError = (function () {
    function MessageError(errorCode, errorString) {
        this._errorCode = errorCode;
        this._errorString = errorString;
        Error.call(this);
        if (typeof Error.captureStackTrace == 'function') {
            // Specific to V8
            Error.captureStackTrace(this, arguments.callee);
        }
        this.name = "MessageError";
        this.message = this.description();
    }
    Object.defineProperty(MessageError.prototype, "errorCode", {
        get: function () {
            return this._errorCode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MessageError.prototype, "errorString", {
        get: function () {
            return this._errorString;
        },
        enumerable: true,
        configurable: true
    });
    MessageError.prototype.description = function () {
        var descr = "";
        if (this._errorCode == ErrorCode.NONE)
            descr = "None";
        else if (this._errorCode == ErrorCode.INVALID_REQUEST)
            descr = "Invalid request";
        else if (this._errorCode == ErrorCode.INVALID_ARGUMENT_NUMBER)
            descr = "Invalid argument number";
        else if (this._errorCode == ErrorCode.INVALID_ARGUMENT_TYPE)
            descr = "Invalid argument type";
        else if (this._errorCode == ErrorCode.OBJECT_DEALLOCATED)
            descr = "Object deallocated";
        else if (this._errorCode == ErrorCode.OBJECT_NOT_FOUND)
            descr = "Object not found";
        else if (this._errorCode == ErrorCode.METHOD_NOT_FOUND)
            descr = "Method not found";
        else
            descr = "Unknown error";
        if (this._errorString !== undefined && this._errorString !== null && this.errorString !== "")
            descr += ": " + this._errorString;
        return descr;
    };
    return MessageError;
})();
exports.MessageError = MessageError;
MessageError.prototype.__proto__ = Error.prototype;
//# sourceMappingURL=message_error.js.map